<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ID Detector</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
</head>

<body>
    <h1>ID Convertor</h1>
    <p>Use only png and jpeg only</p>
    <form id="uploadForm" action="/upload" method="POST" enctype="multipart/form-data">
        <input type="file" name="avatar" id="avatarInput" />
        <button type="button" onclick="submitForm()">Convert</button>
    </form>

    <h2>Result:</h2>
    <div class="spinner-border" role="status" style="display: none;" id="loadingSpinner">
        <span class="visually-hidden"></span>
    </div>
    <div id="jsonOutput"></div>
    <!-- Filter Section -->
    <h2>Filter:</h2>
    <form id="filterForm">
        <!-- Dropdown Menu for Status -->
        <label for="statusFilter">Status:</label>
        <select id="statusFilter" name="status">
            <option value="idNumber">Id Number</option>
            <option value="firstname">First Name</option>
            <option value="lastName">Last Name</option>
        </select>

        <!-- Search Text Box for ID Number -->
        <label for="idNumberFilter">Enter Value:</label>
        <input type="text" id="idNumberFilter" name="idNumber" placeholder="Enter Search Term">
        <!-- Submit Button -->
        <button type="button" onclick="fetchAndDisplayData()">Filter</button>
    </form>
    <div id="dataContainer"></div>
    <h2>Uploaded Images:</h2>
    <div id="imageContainer"></div>


    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <script>
        function submitForm() {
            const fileInput = document.getElementById('avatarInput');
            const maxFileSizeMB = 2;
            if (fileInput.files.length > 0 && fileInput.files[0].size > maxFileSizeMB * 1024 * 1024) {
                alert('File size exceeds the limit. Please choose a file smaller than 2 MB.');
                return;
            }
            const formData = new FormData(document.getElementById('uploadForm'));
            const jsonOutputElement = $('#jsonOutput');
            jsonOutputElement.empty();
            // Show loading spinner
            document.getElementById('loadingSpinner').style.display = '';

            $.ajax({
                type: 'POST',
                url: '/upload',
                data: formData,
                contentType: false,
                processData: false,
                success: function (response) {
                    document.getElementById('loadingSpinner').style.display = 'none';
                    displayJsonOutput(response);
                },
                error: function (error) {
                    document.getElementById('loadingSpinner').style.display = 'none';
                    console.error('Error:', error);
                    displayJsonOutput("File is blurry or not correct format.");
                    alert('Error processing file. Please try again. or Try Using a different image');
                }
            });
        }

        function displayJsonOutput(jsonData) {
            const jsonOutputElement = $('#jsonOutput');
            jsonOutputElement.empty(); // Clear previous content
            const jsonText = JSON.stringify(jsonData, null, 2);
            const lines = jsonText.split('\n');

            lines.forEach((line) => {
                const formattedLine = $('<div></div>').text(line);
                jsonOutputElement.append(formattedLine);
            });
            // Display the image link if available in the response
            if (jsonData.imageLink) {
                const imageLink = $('<img>').attr('src', jsonData.imageLink).attr('alt', 'Processed Image');
                jsonOutputElement.append('<h3>Processed Image:</h3>', imageLink);
            }
        }
        $(document).ready(function () {
            // Fetch images when the page loads
            fetchImages();

            // Function to fetch and display images
            function fetchImages() {
                $.ajax({
                    type: 'GET',
                    url: '/images',
                    success: function (images) {
                        const imageContainer = $('#imageContainer');
                        imageContainer.empty(); // Clear previous content

                        images.forEach((image) => {
                            // Create a div for each image
                            const imageDiv = $('<div></div>');
                            console.log(image.img.data.toString())
                            // Display the image
                            const imageElement = $('<img>').attr('src', 'data:' + image.img.contentType + ';base64,' + btoa(image.img.data)).attr('alt', 'Uploaded Image');
                            imageDiv.append(imageElement);
                            // Display the message
                            const messageElement = $('<p></p>').text('Message: ' + image.desc);
                            imageDiv.append(messageElement);

                            // Append the image div to the container
                            imageContainer.append(imageDiv);
                        });
                    },
                    error: function (error) {
                        console.error('Error retrieving images:', error);
                        alert('Error retrieving images. Please try again.');
                    }
                });
            }
        });
        function fetchAndDisplayData() {
            // Fetch data based on filter criteria
            const statusFilter = document.getElementById('statusFilter').value;
            const idNumberFilter = document.getElementById('idNumberFilter').value;
            console.log(statusFilter, idNumberFilter)
            // Use AJAX or fetch to send a request to your server endpoint with filter parameters
            // Update the URL to match your server route for fetching filtered data
            const url = `/data/search?type=${statusFilter}&value=${idNumberFilter}`;

            fetch(url)
                .then(response => response.json())
                .then(data => {
                    // Display the filtered data in a table on the HTML page
                    const filteredDataContainer = document.getElementById('dataContainer');
                    filteredDataContainer.innerHTML = '';
                    // Create a table element
                    const table = document.createElement('table');
                    table.border = '1';
                    // Create table headers
                    const headers = ['ID Number', 'First Name', 'Last Name', 'Date of Birth', 'Date of Issue', 'Date of Expiry'];
                    const headerRow = document.createElement('tr');

                    headers.forEach(headerText => {
                        const header = document.createElement('th');
                        header.appendChild(document.createTextNode(headerText));
                        headerRow.appendChild(header);
                    });

                    table.appendChild(headerRow);

                    // Create table rows
                    data.forEach(item => {
                        const row = document.createElement('tr');

                        // Add data cells to the row
                        const idNumberCell = document.createElement('td');
                        idNumberCell.appendChild(document.createTextNode(item.idNumber));
                        row.appendChild(idNumberCell);

                        const firstNameCell = document.createElement('td');
                        firstNameCell.appendChild(document.createTextNode(item.firstname));
                        row.appendChild(firstNameCell);

                        const lastNameCell = document.createElement('td');
                        lastNameCell.appendChild(document.createTextNode(item.lastName));
                        row.appendChild(lastNameCell);

                        const dobCell = document.createElement('td');
                        dobCell.appendChild(document.createTextNode(item.dateOfBirth));
                        row.appendChild(dobCell);

                        const doiCell = document.createElement('td');
                        doiCell.appendChild(document.createTextNode(item.dateOfIssue));
                        row.appendChild(doiCell);

                        const doeCell = document.createElement('td');
                        doeCell.appendChild(document.createTextNode(item.dateOfExpiry));
                        row.appendChild(doeCell);

                        // Add the row to the table
                        table.appendChild(row);
                    });

                    // Append the table to the container
                    filteredDataContainer.appendChild(table);
                })
                .catch(error => {
                    console.error('Error fetching filtered data:', error);
                });
        }
    </script>
</body>

</html>